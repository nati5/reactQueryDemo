import { useEffect, useRef } from 'react';

import { CleanUp } from '../../types';

const useAsyncEffect = (effect: () => (Promise<CleanUp> | CleanUp), deps: React.DependencyList) => {
	const cleanUpRef = useRef<CleanUp>();

	useEffect(() => {
		cleanUpRef.current = undefined;

		const cleanUp = effect();

		if (cleanUp instanceof Promise) cleanUp.then(cleanUp => cleanUpRef.current = cleanUp);
		else cleanUpRef.current = cleanUp;

		return () => {
			cleanUpRef.current && cleanUpRef.current();
		}
	}, deps);
};

export default useAsyncEffect;