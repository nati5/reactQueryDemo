import { createContext, useContext, createElement } from 'react';

const createMobXContext = <T extends { [key: string]: any; }>(storeInstance: T): [React.Context<T>, React.FC, () => T] => {

    const StoreContext = createContext<T | null>(null);

    const StoreProvider: React.FC = ({ children }) => createElement(StoreContext.Provider, { value: storeInstance }, children);

    StoreProvider.displayName = `${storeInstance.constructor.name}Provider`;

    const useStore = () => {
		const store = useContext(StoreContext);
		if (!store) throw new Error(`Trying to access ${storeInstance.constructor.name} outside of provider`);
		return store;
		
	}

    return [StoreContext as React.Context<T>, StoreProvider, useStore];
}

export default createMobXContext;