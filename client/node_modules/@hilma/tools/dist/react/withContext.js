var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
import { createElement, useContext } from 'react';
import getDisplayName from './getDisplayName';
var withContext = function (mapContextToProps) { return function (component) { return Object.entries(mapContextToProps).reduceRight(function (component, _a) {
    var key = _a[0], Context = _a[1];
    var WithContext = function (props) {
        var _a;
        var value = useContext(Context);
        return createElement(component, __assign(__assign({}, props), (_a = {}, _a[key] = value, _a)));
    };
    WithContext.displayName = "withContext(" + getDisplayName(component) + ")";
    return WithContext;
}, component); }; };
export default withContext;
//# sourceMappingURL=withContext.js.map