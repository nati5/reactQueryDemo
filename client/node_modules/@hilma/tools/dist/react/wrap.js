import * as React from "react";
import { isRenderable } from "./isRenderable";
export function wrap() {
    var parents = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        parents[_i] = arguments[_i];
    }
    /**
     * @param child The child to wrap with the parents. Either a component or an element.
     * @param props The props to pass to the child, if it's a component.
     *
     * @example
     * // writing
     * wrap(Wrapper)(Component, {otherProp: "hello"})
     *
     * // is the same as writing
     * <Wrapper>
     *   <Component otherProp="hello" />
     * </Wrapper>
     */
    return function (child, props) {
        return parents.reduceRight(function (acc, cur) {
            if (cur instanceof Array) {
                return React.createElement(cur[0], cur[1], acc);
            }
            return React.createElement(cur, null, acc);
        }, isRenderable(child) ? child : React.createElement(child, props));
    };
}
export default wrap;
//# sourceMappingURL=wrap.js.map