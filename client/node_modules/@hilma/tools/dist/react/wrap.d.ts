import * as React from "react";
import { Component, Providers, Element } from "../types";
export declare function wrap<T extends Array<{
    [key: string]: any;
}>>(...parents: Providers<T>): <C extends {}>(child: React.ReactElement<{}, string | ((props: any) => React.ReactElement<any, string | any | (new (props: any) => React.Component<any, any, any>)> | null) | (new (props: any) => React.Component<any, any, any>)> | React.FunctionComponent<C> | React.ComponentClass<C, unknown>, props?: C | undefined) => React.ReactElement<{}, string | ((props: any) => React.ReactElement<any, string | any | (new (props: any) => React.Component<any, any, any>)> | null) | (new (props: any) => React.Component<any, any, any>)>;
export default wrap;
